Node JS + React Vite + Postgres SQL + Nginx + Certbot + Docker + Docker-Compose + Ubuntu 


sudo apt update
sudo apt install nginx

sudo apt install certbot python3-certbot-nginx

Tienes que configurar Nginx para que sirva de proxy inverso para tus contenedores Docker.

Crea un archivo de configuración en /etc/nginx/sites-available/ para react.between-bytes.tech y api.between-bytes.tech.

sudo nginx -t

# crear el directorio para archivos estáticos
sudo mkdir -p /var/www/react.between-bytes.tech

# copiar los archivos estáticos
sudo cp -r /home/ubuntu/react-app/build/* /var/www/react.between-bytes.tech/

Por ejemplo, para react.between-bytes.tech:

sudo nano /etc/nginx/sites-available/react.between-bytes.tech

server {
    listen 80;
    server_name react.between-bytes.tech;

    location / {
        root /var/www/react.between-bytes.tech;
        index index.html;
    }

    # Redirige tráfico HTTP a HTTPS
    return 301 https://$server_name$request_uri;
}

# primero se configura el servidor HTTP y luego el servidor HTTPS
server {
    listen 443 ssl;
    server_name react.between-bytes.tech;

    ssl_certificate /etc/letsencrypt/live/react.between-bytes.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/react.between-bytes.tech/privkey.pem;

    location / {
        root /var/www/react.between-bytes.tech;
        index index.html;
    }
}

Para api.between-bytes.tech:

sudo nano /etc/nginx/sites-available/api.between-bytes.tech

server {
    listen 80;
    server_name api.between-bytes.tech;

    location / {
        proxy_pass http://localhost:3050;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Redirige tráfico HTTP a HTTPS
    return 301 https://$server_name$request_uri;
}

# primero se configura el servidor HTTP y luego el servidor HTTPS
server {
    listen 443 ssl;
    server_name api.between-bytes.tech;

    ssl_certificate /etc/letsencrypt/live/api.between-bytes.tech/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.between-bytes.tech/privkey.pem;

    location / {
        proxy_pass http://localhost:3050; 
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


sudo ln -s /etc/nginx/sites-available/react.between-bytes.tech /etc/nginx/sites-enabled/
sudo ln -s /etc/nginx/sites-available/api.between-bytes.tech /etc/nginx/sites-enabled/

sudo nginx -t

Si la configuración es correcta, verás un mensaje como:

nginx: configuration file /etc/nginx/nginx.conf test is successful

Usar Certbot para obtener los certificados SSL

sudo certbot --nginx -d react.between-bytes.tech
sudo certbot --nginx -d api.between-bytes.tech

Verificar la configuración

sudo nginx -t

sudo systemctl restart nginx

Renovar los certificados automáticamente

sudo certbot renew

Verifica que la renovación se haya realizado correctamente:

sudo systemctl reload nginx

Configura la renovación automáticamente:

sudo systemctl enable certbot.timer

Configurar Docker Composer backend y frontend


Estrucutra de archivos
/etc/letsencrypt/live/
  ├── react.between-bytes.tech/
  │   ├── cert.pem        # Certificado del dominio
  │   ├── chain.pem       # Certificado intermedio
  │   ├── fullchain.pem   # Certificado completo
  │   └── privkey.pem     # Clave privada
  └── api.between-bytes.tech/
      ├── cert.pem
      ├── chain.pem
      ├── fullchain.pem
      └── privkey.pem


sudo rm -f /etc/nginx/sites-available/react.between-bytes.tech
sudo rm -f /etc/nginx/sites-available/api.between-bytes.tech
sudo rm -f /etc/nginx/sites-enabled/react.between-bytes.tech
sudo rm -f /etc/nginx/sites-enabled/api.between-bytes.tech
